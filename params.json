{"name":"Ez-maintenance","tagline":"A Website Maintenance Page For sites with front-controller","body":"Easy Maintenance\r\n=================\r\nUtility Library to handle site maintenance situation\r\n\r\nKey Features\r\n------------\r\n* Easy to use\r\n* Highly Customizable\r\n\r\n\r\n## Installation/Usage\r\n\r\nIf you're using Composer to manage dependencies, you can include the following\r\nin your composer.json file:\r\n\r\n    \"require\": {\r\n        \"xiidea/ez-maintenance\": \"dev-master\"\r\n    }\r\n\r\nThen, after running `composer update` or `php composer.phar update`, you can\r\nload the class using Composer's autoloading:\r\n\r\n```php\r\nrequire 'vendor/autoload.php';\r\n```\r\n\r\nOtherwise, you can simply require the given `autoload.php` file:\r\n\r\n```php\r\nrequire_once 'PATH_TO_LIBRARY/autoload.php';\r\n\r\n```\r\n\r\nThen you can just call `EzMaintenance\\Worker::watch()` In your `index.php` (see the [example](https://github.com/xiidea/ez-maintenance/blob/master/example/index.php))\r\n\r\n\r\n## Different Adapters to check maintenance mode\r\n\r\nUse adapter to detect if we need to serve the maintenance page or not. 3 Types of adapter provided. You can also define your own adapter.\r\n\r\n##### File Adapters\r\n\r\nThis is the default adapter. it checks for a specific file if exist or not. default path is *down*. For the following implementation\r\nyou will be shown maintenance page if there is a file exists named `maintenance.enable`\r\n\r\n```php\r\n<?php\r\n\r\nEzMaintenance\\Worker::watch('file', array(\r\n        'path' => 'maintenance.enable'\r\n));\r\n\r\n\r\n```\r\n\r\n##### Env Adapters\r\n\r\nUsing this adapter you can watch over existence of an environment variable. The maintenance page will be shown if the environment\r\n variable is present with specific value.\r\n\r\n```php\r\n<?php\r\n\r\nEzMaintenance\\Worker::watch('env', array(\r\n        'var_name' => 'APPLICATION_ENV',\r\n        'check_value' => 'down'\r\n));\r\n\r\n\r\n```\r\n\r\n##### Const Adapters\r\n\r\nThis is same ad the env adapter. Only difference is it will check for a php constant instead of environment variable.\r\n\r\n```php\r\n<?php\r\n\r\nEzMaintenance\\Worker::watch('const', array(\r\n        'var_name' => 'APPLICATION_ENV',\r\n        'check_value' => 'down'\r\n));\r\n\r\n```\r\n\r\n##### Custom Adapters\r\n\r\nYou can define your own adapter by implementing the `EzMaintenance\\Adapter\\AdapterInterface`\r\n\r\n\r\n### Common options\r\n\r\nFollowing options are available to customize the behaviour of the library\r\n\r\n##### interval\r\n\r\nThis option state the interval in second, the system will check for the site status with this interval. default is 5 second.\r\n\r\n##### override_key\r\n\r\nYou can configure a key to override the maintenance mode. This is helpful t test your site normally while others will see maintenance page.\r\nTo browse the page in maintenance mode, you just need to pass the override key as query parameter like: `http://yourdomain.com/?key={override_key}`\r\n\r\n##### inverse\r\n\r\nIf you want to enable maintenance mode when adapter return false, you can set `inverse = true`.\r\n\r\n##### template\r\n\r\nYou can provide the built-in template name(simple, game, clock) or path to your own template file. All the options will also be available in your template.\r\nYou should `echo $javascript` in your template file to enable auto status check.\r\n\r\n```php\r\n<?php\r\n    echo $javascript;\r\n?>\r\n```\r\n\r\n##### msg\r\n\r\nIf you are using any of the default template, you can customize the message using this option.\r\n\r\n\r\n## Contributing to Library\r\n\r\nIf you find a bug or want to add a feature to EzMaintenance, great! In order to make it easier and quicker for me to verify and merge changes in, it would be amazing if you could follow these few basic steps:\r\n\r\n1. Fork the project.\r\n2. **Branch out into a new branch. `git checkout -b name_of_new_feature_or_bug`**\r\n3. Make your feature addition or bug fix.\r\n4. Commit.\r\n5. Send me a pull request!\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}